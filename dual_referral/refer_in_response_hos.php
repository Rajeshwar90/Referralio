<?php	/* Developed By Rajeshwar Bose       PHP: 5.4.37 Date: 05-26-2015*/	   	require_once("Rest.inc.php");	class REFER_IN_RESPONSE_HOS extends REST {			public $data = "";		const DB_SERVER = "localhost";		const DB_USER = "root";		const DB_PASSWORD = "refSqlRef007";		const DB = "referralapp";		private $db = NULL;			public function __construct(){			parent::__construct();				// Init parent contructor			$this->dbConnect();					// Initiate Database connection			include_once("logger.php");			$this->logger = new Logger();			$this->logger->write("INFO :","PHP Scritp Name =>".$_SERVER['REQUEST_URI']);			$this->logger->write("INFO :","Type of Request =>".$_SERVER['REQUEST_METHOD']);		}				/*		 *  Database connection 		*/		private function dbConnect(){			$this->db = mysql_connect(self::DB_SERVER,self::DB_USER,self::DB_PASSWORD);			if($this->db)				mysql_select_db(self::DB,$this->db);		}				/*		 * Public method for access api.		 * This method dynmically call the method based on the query string		 *		 */		public function processApi(){			$func = strtolower(trim(str_replace("/","",$_REQUEST['request'])));			if((int)method_exists($this,$func) > 0)				$this->$func();			else				$this->response('',404);				// If the method not exist with in this class, response would be "Page not found".		}				/* 		 *	Simple listing API		 *  POST method		 *  enc_key : <Encrypted KEY>		 *  login_id : <User id autoincremented>		 */				private function REFER_IN_RESPONSE(){		    error_reporting(0);		    $this->logger->write("INFO :","Calling REFER_IN_RESPONSE_HOS for doctor");			// Cross validation if the request method is POST else it will return "Not Acceptable" status			if($this->get_request_method() != "POST"){				$this->response('',406);			}						$post = json_decode(file_get_contents("php://input"), true);			$login_encrypted_key = $post['enc_key'];			$login_id=$post['login_id'];										$this->logger->write("INFO :","login with".$login_encrypted_key."login_id".$login_id);									//$mob_number = $this->_request['Doctor_mobile_number'];					//$password = $this->_request['pwd'];						// Input validations			if(!empty($login_encrypted_key) and !empty($login_id)){					$sql = mysql_query("SELECT * FROM doctor_stub WHERE BINARY Doctor_login_enc_key = '$login_encrypted_key' AND Doctor_serial_id = '$login_id'", $this->db);					if(mysql_num_rows($sql) > 0){											 //$query_list_doc=mysql_query("select ds.Doctor_serial_id,ds.Doctor_name, ds.Doctor_dob, ds.Doctor_email, ds.Doctor_specialization, ds.Doctor_qualification, ds.Doctor_HospitalName,ds.Doctor_Country,ds.Doctor_State,ds.Doctor_City,ds.Doctor_Address, ds.Doctor_mobile_number, ds.Doctor_photograph,ds.Doctor_yxp,ds.type_value from doctor_stub ds where ds.Doctor_yxp IN (SELECT refer_by_hos_id FROM `hospital_refer_in_doctor_stub` where doc_stub_id='$login_id' ) and ds.type_value='hospital'",$this->db);                                                   						$query_list_doc=mysql_query("select ds.Doctor_serial_id,ds.Doctor_name, ds.Doctor_dob, ds.Doctor_email, ds.Doctor_specialization, ds.Doctor_qualification, ds.Doctor_HospitalName,ds.Doctor_Country,ds.Doctor_State,ds.Doctor_City,ds.Doctor_Address, ds.Doctor_mobile_number, ds.Doctor_photograph,ds.Doctor_yxp,ds.type_value from doctor_stub ds where ds.Doctor_yxp IN (SELECT refer_by_hos_id FROM `hospital_refer_in_doctor_stub` where doc_stub_id='$login_id' )and ds.type_value='hospital' UNION select ds.Doctor_serial_id,ds.Doctor_name, ds.Doctor_dob, ds.Doctor_email, ds.Doctor_specialization,ds.Doctor_qualification,ds.Doctor_HospitalName,ds.Doctor_Country,ds.Doctor_State,ds.Doctor_City,ds.Doctor_Address, ds.Doctor_mobile_number, ds.Doctor_photograph,ds.Doctor_yxp,ds.type_value from doctor_stub ds where ds.Doctor_serial_id in(Select personal_list_doc_id from doctor_personal_list where doc_id='$login_id')",$this->db);								$query_doc="select ds.Doctor_serial_id,ds.Doctor_name, ds.Doctor_dob, ds.Doctor_email, ds.Doctor_specialization, ds.Doctor_qualification, ds.Doctor_HospitalName,ds.Doctor_Country,ds.Doctor_State,ds.Doctor_City,ds.Doctor_Address, ds.Doctor_mobile_number, ds.Doctor_photograph,ds.Doctor_yxp,ds.type_value from doctor_stub ds where ds.Doctor_yxp IN (SELECT refer_by_hos_id FROM `hospital_refer_in_doctor_stub` where doc_stub_id='$login_id' )and ds.type_value='hospital' UNION select ds.Doctor_serial_id,ds.Doctor_name, ds.Doctor_dob, ds.Doctor_email, ds.Doctor_specialization,ds.Doctor_qualification,ds.Doctor_HospitalName,ds.Doctor_Country,ds.Doctor_State,ds.Doctor_City,ds.Doctor_Address, ds.Doctor_mobile_number, ds.Doctor_photograph,ds.Doctor_yxp,ds.type_value from doctor_stub ds where ds.Doctor_serial_id in(Select personal_list_doc_id from doctor_personal_list where doc_id='$login_id')";								$this->logger->write ($query_doc);						 if(mysql_num_rows($query_list_doc)>0){						   while($row = mysql_fetch_assoc($query_list_doc)){									$json[] = $row;								}							$success = array('status' => "Success", "msg" => "Hospitals available","Hos_list" => $json);					        $this->response($this->json($success), 200);													 }						 else						 {						    $success = array('status' => "Success", "msg" => "Hospitals not available");					        $this->response($this->json($success), 204);						 }					}					else					{					  $error1 = array('status' => "Failed", "msg" => "Basic authentication failed");					  $this->response($this->json($error1), 203);	// If no records "No Content" status                    }					  			}			else{			// If invalid inputs "Bad Request" status message and reason			$error = array('status' => "Failed", "msg" => "Either encrypted key or id is empty");			$this->response($this->json($error), 400);			}		}						/*		 *	Encode array into JSON		*/		private function json($data){			if(is_array($data)){				return json_encode($data);			}		}	}		// Initiiate Library		$api = new REFER_IN_RESPONSE_HOS;	$api->processApi();?>